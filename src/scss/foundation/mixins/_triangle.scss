@charset "UTF-8";
@use "sass:math";

/* ========================================
  Triangle Mixin
  @param {String} $direction - Direction
  @param {Number} $width - Width
  @param {Number} $height - Height
  @param {Color} $color - Color
  ex: @include triangle.triangle(upward, 20px, 20px, #333);
======================================== */

@mixin triangle($direction, $width, $height, $color: currentColor) {
  @if not index(upward rightward downward leftward upperLeft upperRight lowerRight lowerLeft, $direction) {
    @error "Index the direction of triangle () from 'upward,'rightward','downward','leftward','upperLeft','upperRight','lowerRight','lowerLeft'";
  }

  $halfWidth: math.div($width, 2);
  $halfHeight: math.div($height, 2);

  height: 0;
  width: 0;
  border-style: solid;

  @if ($direction == upward) {
    border-color: transparent transparent $color transparent;
    border-width: 0 $halfWidth $height $halfWidth;
  } @else if ($direction == rightward) {
    border-color: transparent transparent transparent $color;
    border-width: $halfHeight 0 $halfHeight $width;
  } @else if ($direction == downward) {
    border-color: $color transparent transparent transparent;
    border-width: $height $halfWidth 0 $halfWidth;
  } @else if ($direction == leftward) {
    border-color: transparent $color transparent transparent;
    border-width: $halfHeight $width $halfHeight 0;
  } @else if ($direction == upperLeft) {
    border-color: $color transparent transparent transparent;
    border-width: $height $height 0 0;
  } @else if ($direction == upperRight) {
    border-color: transparent $color transparent transparent;
    border-width: 0 $height $height 0;
  } @else if ($direction == lowerRight) {
    border-color: transparent transparent $color transparent;
    border-width: 0 0 $height $height;
  } @else if ($direction == lowerLeft) {
    border-color: transparent transparent transparent $color;
    border-width: $height 0 0 $height;
  }
}
